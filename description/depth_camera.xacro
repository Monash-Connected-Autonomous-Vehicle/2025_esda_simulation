<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" >


    <!-- Camera Mount -->
    <link name="camera_mount">
        <visual>
            <geometry>
                <!--box size="0.1 0.1 0.02"/> <! Adjust size to your needs -->
                <mesh filename="package://esda_bot/urdf_asterius_v4/fcid_camera_mount.stl" scale="1 1 1"/>
            </geometry>
            <material name="grey">
                <color rgba="0.5 0.5 0.5 1.0"/>
            </material>
        </visual>
        <!-- Need to add collision camera mount sticks out. Need to add inertia if the camera mount is not on a fixed point
        <collision>
            <geometry>
                <box size="0.1 0.1 0.02"/>
            </geometry>
        </collision>
        <inertial>
            <mass value="0.05"/>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia
                ixx="0.0001" ixy="0.0" ixz="0.0"
                iyy="0.0001" iyz="0.0"
                izz="0.0001"/>
        </inertial>
        -->
    </link>

    <joint name="camera_mount_joint" type="fixed">
        <parent link="chassis"/>
        <child link="camera_mount"/>
        <origin xyz="0.305 0 0.07" rpy="0 0 0"/> <!-- TODO: adjust the mount to its actual position on the chassis-->
    </joint>

    <!-- Attach camera to the mount instead of directly to chassis -->
    <joint name="camera_joint" type="fixed">
        <parent link="camera_mount"/>
        <child link="camera_link"/>
        <origin xyz="0 0 0.01" rpy="0 0 0"/> <!--Camera is slightly above the mount-->
    </joint>

    <link name="camera_link">
        <visual>
            <geometry>
                <!--<box size="0.010 0.03 0.03"/>  TODO: change the dimension of the camera if needed to-->
                <mesh filename="package://esda_bot/urdf_asterius_v4/zed2_ip_outer_with_lens_v8__3.stl" scale="1 1 1"/>
            </geometry>
            <material name="red"/>
        </visual>
        <!-- Need to add collision if the camera sticks out. Need to add inertia if the camera is not on a fixed point-->

        <!--
        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>
        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>
        </xacro:inertial_cylinder>
        -->
    </link>


    <joint name="camera_optical_joint" type="fixed">
        <parent link="camera_link"/>
        <child link="camera_link_optical"/>
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>
    </joint>

    <link name="camera_link_optical"></link>



    <gazebo reference="camera_link">
        <material>Gazebo/Red</material>

        <sensor name="camera" type="camera">
            <pose> 0 0 0 0 0 0 </pose>
            <visualize>true</visualize>
            <update_rate>10</update_rate>
            <camera>
                <horizontal_fov>1.089</horizontal_fov> <!--Fov is in radians-->
                <image>
                    <format>B8G8R8</format> <!--8bit for each Green Blue Red-->
                    <width>640</width>
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>
                    <far>8.0</far>
                </clip>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <frame_name>camera_link_optical</frame_name>
                <min_depth>0.1</min_depth> 
                <max_depth>100.0</max_depth>
            </plugin>
        </sensor>
    </gazebo>

</robot>